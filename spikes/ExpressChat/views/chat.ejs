<% layout('./layout/page') -%>
<% block('title', 'Чат') -%>
<p class="lead">Здесь будет чат.</p>

<script src="/socket.io/socket.io.js"></script>

<div id='room'>
    <ul></ul>
    <form>
        <input class="form-control" autocomplete="off" autofocus placeholder="Сообщение..." />
    </form>
</div>

<script>
    var socket = io.connect('', {
        //'reconnection delay': 1
        reconnect: false
    });
    
    var form = $('#room form');
    var ul = $('#room ul');
    var input = $('#room input');

    // form.submit(function() {
    //     console.log('submit');
    //     var text = input.val();
    //     input.val('');
        
    //     socket.emit('message', text, function(data) {
    //         console.log('callback');
    //         $('<li>', {text: text}).appendTo(ul);
    //     });

    //     return false;
    // });

    function sendMessage() {
        var text = input.val();
        socket.emit('message', text, function() {
            printMessage("я >" + text);
        });
        input.val('');
        return false;
    }

    function printStatus(status) {
        $('<li>').append($('<i>').text(status)).appendTo(ul);
    }
    function printMessage(text) {
        $('<li>').text(text).appendTo(ul);
    }

    socket
        .on('message', function(username, text) {
            printMessage(username + " > " + text);
        })
        .on('leave', function(username) {
            printStatus(username + ' вышел из чата');
        })
        .on('join', function(username) {
            printStatus(username + ' вошел в чат');
        })
        .on('logout', function() {
            location.href = "/";
        })
        .on('connect', function() {
            printStatus('Соединение установлено');
            form.on('submit', sendMessage);
            input.prop('disabled, false');
        })
        .on('disconnect', function() {
            printStatus('Соединение потеряно');
            form.off('submit', sendMessage);
            input.prop('disabled, true');
            setTimeout(reconnect, 500)
        })
        // .on('reconnect_failed', function() {
        //     alert('Умерло навсегда');
        // });
        function reconnect() {
            socket.once('error', function() {
                setTimeout(reconnect, 500);
            });
            socket.socket.connect();
        }
</script>